services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_DATABASE: upl_learning_platform
      MYSQL_ROOT_PASSWORD: 1234
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      - redis

  upl-learning-platform:
    build:
      context: ./upl-learning-platform
      dockerfile: Dockerfile
    container_name: springboot-container
    depends_on:
      - mysql
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/upl_learning_platform
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    ports:
      - "8081:8081"
    volumes:
      - ./upl-learning-platform/src:/app/src
      - ./upl-learning-platform/pom.xml:/app/pom.xml
      - ~/.m2:/root/.m2
      - ./upl-learning-platform/target:/app/target
    command: >
      sh -c "sleep 20 && ./mvnw spring-boot:run -Dspring-boot.run.fork=false -Dspring-boot.devtools.restart.enabled=true -Dspring-boot.devtools.restart.pollInterval=500ms -Dspring-boot.devtools.livereload.enabled=true"

  upltutorial:
    build:
      context: ./upltutorial
      dockerfile: Dockerfile
    container_name: angular-container
    ports:
      - "4200:4200"
    volumes:
      - ./upltutorial:/app
      - /app/node_modules
    command: npm start

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-container
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  mysql_data:
  grafana_data:
  redis_data:
